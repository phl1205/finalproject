/* CSS reset - Don't modify */
*, *::before, *::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

html {
	text-size-adjust: none;
}

body {
	line-height: 1.5;
	-webkit-font-smoothing: antialiased;
}

img, picture, video, canvas, svg {
	display: block;
	max-width: 100%;
}

input, button, textarea, select {
	font: inherit;
}

h1, h2, h3, h4, h5, h6 {
	font-weight: 650;
	text-wrap: balance;
	overflow-wrap: break-word;
}
[hidden] {
	display: none !important;
}
/* End of CSS reset */

/* Base styles - keep essential layout */
html {
	font-family: "Playpen Sans", fantasy;
	font-size: clamp(12px, 0.5vw + 9.6px, 16px);
	width: 100%;
	height: 100%;
	display: grid;
	place-items: start center;  /* Changed from center to start center */
	background: linear-gradient(135deg, #f4f8fb 0%, #e8f4ff 100%);
	overflow-y: auto;
	scroll-behavior: smooth;
}

body {
	display: contents;
	width: 100%;
	overflow-x: hidden;
}

/* Arranges the main content into rows for header, flashcard area, and actions. */
main {
	padding: 2rem;
	width: 100%;
	height: auto;
	min-height: 100vh;
	display: grid;
	grid-template-rows: auto 1fr auto;
	gap: 1.5rem;
	max-width: 90rem; /* Increased from 60rem */
	margin-top: 0;  /* Ensure no top margin */
}

/* Styles the header with a title and a toggle button for the entries list. */
#header {
	color: #f7f736;
    text-align: center;
    font-size: 2.5rem;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
    margin-bottom: 2rem;
    padding-top: 1rem;
    z-index: 100;
}

#toggle-entries {
	display: inline-block;
	width: 2.5rem;
	font-size: 70%;
	font-weight: 900;
	text-align: center;
	cursor: pointer;
	transform: rotate(88deg);
	transform-origin: 60% 60%;
	transition: color 0.3s;
	color: #007acc;
}

#toggle-entries:hover {
	color: #005488;
}

/* The entries list, which is overlaid on top of the flashcard area. */
#entries {
	position: relative;
	grid-row: 2 / 3;
	grid-column: 1 / 2;
	height: 100%;
	background-color: rgba(255, 255, 255, 0.9);
	border: 1px solid rgba(0, 0, 0, 0.1);
	display: none;
	opacity: 0;
	transition: display 0.3s allow-discrete, opacity 0.3s;
	z-index: 1;
	border-radius: 1rem;
}

#entries-inner {
	position: absolute;
	inset: 0;
	overflow-y: auto;
}

/* Table settings and row hover effects for the entries list. */
#entries table {
	width: 100%;
	border-collapse: collapse;
	text-align: center;
}

#entries th, #entries td {
	padding: 0.75rem;
	border-bottom: 1px solid #ddd;
}

#entries th {
	background-color: #ddf5ff;
}

#entries th:first-child {
	border-top-left-radius: 1rem;
}

#entries th:last-child {
	border-top-right-radius: 1rem;
}

#entries thead {
	position: sticky;
	top: 0;
}

#entries tbody tr {
	cursor: pointer;
	transition: background-color 0.3s;
}

#entries tbody tr:hover {
	background-color: #f1f1f1;
}

/* The #toggle-entries element acts as a label for #toggle-entries-checkbox. 
	Clicking #toggle-entries changes the state of #toggle-entries-checkbox.
	When #toggle-entries-checkbox is checked, this ruleset is in effect, and the #entries table becomes visible.
	Otherwise, the previous rules (display: none; opacity: 0;) inside the #entries ruleset remain effective, and the table is hidden. */
#toggle-entries-checkbox:checked ~ main #entries {
	display: block;
	opacity: 1;
	@starting-style {
		opacity: 0;
	}
}

.row-highlight {
	background-color: #fff3cd;
}

.overdue-date {
	color: #d9534f;
	font-weight: bold;
}

/* The flashcard container, which uses perspective to allow a 3D flip animation. */
#flashcard {
	grid-row: 2 / 3;
	grid-column: 1 / 2;
	height: 100%;
	position: relative;
	perspective: 60rem;
}

#card-inner {
	position: absolute;
	width: 100%;
	height: 100%;
	transform-style: preserve-3d;
	transition: transform 0.6s;
}

/* Rotates the card around the Y-axis when the checkbox is checked such that the back side is visible.
	It makes use of the same technique as the entries list to toggle the checkbox state when the card is clicked.
	When the checkbox is no longer checked, the card is rotated back to the front side. */
#flip-card-checkbox:checked ~ main #card-inner {
	transform: rotateY(180deg);
}
.card {
	position: absolute;
	width: 100%;
	height: 100%;
	backface-visibility: hidden;
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 2rem;
	background: linear-gradient(to bottom right, #ffffff, #f8faff);
	border: 1px solid rgba(0, 0, 0, 0.1);
	font-size: 100%;
	border-radius: 1rem;
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
	transition: box-shadow 0.3s;
	transform-style: preserve-3d;
    transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.3s ease;
}

.card:hover {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    transform: translateY(-5px);
}

/* STUDENTS: Start of recommended modifications */
/* You can alter colours, fonts, sizing, or layout for .card-front and .card-back below. */

/* Styles for the front side of the card. */
.card-front {
	color: #255f85;
	display: flex;
	justify-content: center;
	align-items: center;
}

#front-word {
	font-size: 100%;
}

/* Adjust the size of the image */
#front-image {
	max-width: 100%;
    height: auto;
    max-height: 230px;
    object-fit: contain;
    border-radius: 6px;
    margin: 0;
	transition: all 0.4s ease;
}

#front-image:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Styles for the back side of the card. */
.card-back {
    transform: rotateY(180deg);
    background-color: #f8f9fa;
}

/* STUDENTS: End of recommended modifications */

/* The actions area, which contains buttons for different actions. */
#actions {
	display: flex;
	justify-content: space-between;
	gap: 0.5rem;
}

button {
	appearance: none;
	border: 1px solid rgba(0, 0, 0, 0.1);
	padding: 0.5rem 2rem;
	border-radius: 0.5rem;
	background-color: #ddf5ff;
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
	transition: background-color 0.3s, box-shadow 0.3s;
	cursor: pointer;
    transform-origin: center;
    transition: transform 0.2s ease;
}

button:hover {
	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
	background-color: #c1eaff;
    transform: scale(1.05);
}

#btns-progress {
	display: none; /* Removed progress buttons */
}

#quiz-levels {
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 1rem;
}

/* Add a container for level buttons */
.level-buttons-container {
	display: flex;
	flex-direction: row;
	gap: 2rem;
	justify-content: center;
}

.quiz-level-btn {
	min-width: 300px;  /* Made wider */
    font-size: 1.5rem; /* Made text bigger */
    background-color: #007acc;
    color: white;
    padding: 1.5rem 3rem; /* Made taller */
    margin: 0.5rem 0;
}

.level-1 {
    background: linear-gradient(45deg, #ff6b6b, #ffd93d); /* Warm colors */
    color: white;
    border: none;
    transition: all 0.3s ease;
}

.level-1:hover {
    background: linear-gradient(45deg, #ff5252, #ffcd38); /* Darker warm colors */
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
}

.level-2 {
    background: linear-gradient(45deg, #4facfe, #00f2fe); /* Cool colors */
    color: white;
    border: none;
    transition: all 0.3s ease;
}

.level-2:hover {
    background: linear-gradient(45deg, #4295d1, #00d4dd); /* Darker cool colors */
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
}

.level-max {
    background: linear-gradient(45deg, #ff6b6b, #4facfe, #2ecc71); /* Full rainbow */
    background-size: 200% 200%;
    color: white;
    border: none;
    animation: gradient 5s ease infinite;
}

.level-max:hover {
    background: linear-gradient(45deg, #ff5252, #4295d1, #27ae60); /* Darker rainbow */
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
}

@keyframes gradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

.excitement-text {
    color: #007acc;
    font-size: 1.8rem;
    margin: 1rem 0;
    text-align: center;
    animation: bounce 1s infinite;
}

@keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

#btn-quiz-back {
	background-color: #ddf5ff;
	color: #007acc;
}

#btn-quiz-back:hover {
	background-color: #c1eaff;
}

/* Style for the start page */
#start-page {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    padding: 2rem;
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
    position: relative;
    overflow: hidden;
}

#front-title {
    color: #4a90e2;
    font-size: 1.8rem;  /* Changed from 2.5rem to 1.8rem */
    text-align: center;
    margin-bottom: 2rem;
    animation: floatIn 1.5s ease-out, glow 2s ease-in-out infinite;
    text-shadow: 0 0 10px rgba(74, 144, 226, 0.3);
    position: relative;
	background: linear-gradient(45deg, #6594ca, #007acc, #20b2aa);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: titleGradient 3s ease infinite;
}

#front-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 3px;
    background-color: #4a90e2;
    animation: expandLine 1.5s ease-out forwards;
}

.button-revision-type {
    min-width: 200px;  /* Reduced from 280px for better fit */
    padding: 1rem 2rem;
    font-size: 1.2rem;
    border-radius: 15px;
    border: none;
    background: white;
    margin: 0.5rem 0;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    color: white;
    font-weight: bold;
    animation: slideIn 0.5s ease-out backwards;
    position: relative;
    overflow: hidden;
	transition: all 0.4s ease;
}

.button-revision-type:nth-child(2) {
    animation-delay: 0.2s;
}

.button-revision-type::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.6s ease, height 0.6s ease;
}

.button-revision-type:hover::before {
    width: 300px;
    height: 300px;
}

.button-revision-type::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: rgba(255, 255, 255, 0.2);
    transform: rotate(45deg);
    transition: all 0.4s ease;
    opacity: 0;
}

.button-revision-type:hover::after {
    opacity: 1;
    transform: rotate(45deg) translateY(-50%);
}

@keyframes floatIn {
    0% {
        opacity: 0;
        transform: translateY(-50px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes glow {
    0%, 100% {
        text-shadow: 0 0 10px rgba(74, 144, 226, 0.3);
    }
    50% {
        text-shadow: 0 0 20px rgba(74, 144, 226, 0.5);
    }
}

@keyframes expandLine {
    0% {
        width: 0;
    }
    100% {
        width: 100px;
    }
}

@keyframes slideIn {
    0% {
        opacity: 0;
        transform: translateX(-50px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes titleGradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

.start-page-decoration {
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: rgba(74, 144, 226, 0.2);
    animation: float 3s infinite ease-in-out;
    pointer-events: none;
}

@keyframes float {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-20px);
    }
}

/* Colorful buttons for revision types */
#btn-revision-1 { background: #6594ca; }
#btn-revision-2 { background: #6fa7c5; }
#btn-revision-3 { background: #5b96c9; }
#btn-revision-4 { background: #5c8fd1; }
#btn-revision-regular { background: #20b2aa; }
#btn-quiz { 
    background: #007acc;
    font-size: 1.3rem;
}

.button-revision-type:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    filter: brightness(110%);
}

/* Animation keyframes */
@keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

.card-layout {
    display: flex;
    width: 100%;
    height: 100%;
    gap: 2rem;
}

.left-section {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 1rem;  /* Reduced from 2rem */
    padding: 1rem;
    border-right: 1px solid #eee;
}

.right-section {
    flex: 1;
    padding: 1rem;
}

.image-section {
    width: 100%;
    min-height: 250px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 0.5rem;  /* Reduced from 1rem to 0.5rem */
    background-color: #f8f9fa;
    border-radius: 8px;
	position: relative;
}

.image-section::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #007acc;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    opacity: 0;
}

.image-section.loading::before {
    opacity: 1;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}

.verb-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
}

.verb-pair, .verb-group, .verb-header, .chinese-meaning {
    display: none;
}

.sentences-section {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 2rem;
}

.sentence-group {
    padding: 1.5rem;
    background-color: #f8f9fa;
    border-radius: 0.5rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    margin-bottom: 1rem;
}

.highlight {
    background-color: #fff3cd;
    padding: 0.2rem 0.4rem;
    border-radius: 0.3rem;
    font-weight: bold;
	position: relative;
    animation: highlightPulse 2s infinite;
}

@keyframes highlightPulse {
    0% { background-color: #fff3cd; }
    50% { background-color: #ffe7a0; }
    100% { background-color: #fff3cd; }
}

audio {
    width: 200px;
    height: 30px;
}

#front-present-word,
#front-past-word {
    font-weight: bold;
    color: #0d47a1; /* Changed to darker blue */
    font-size: 1.2rem;
}

#front-word-present,
#front-word-past {
    color: #444;
    font-size: 1.1rem;
}

#front-sentence-present,
#front-sentence-past {
    display: block;
    color: #555;
    font-size: 1.1rem;
    line-height: 1.6;
    margin-bottom: 0.8rem;
}

.tense-label {
    background-color: #007acc;
    color: white;
    padding: 0.3rem 1rem;
    border-radius: 1rem;
    font-size: 0.9rem;
    margin-bottom: 0.5rem;
    font-weight: bold;
}

.verb-boxes {
    display: flex !important;
    flex-direction: row !important;
    gap: 1rem;
    justify-content: space-between;  /* Changed from center to space-between */
    align-items: stretch;  /* Changed from center to stretch */
    width: 100%;
    padding: 1rem;
    margin: 0 auto;
}

.verb-box {
    flex: 1;
    background: linear-gradient(145deg, #ffffff, #f0f0f0);
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    text-align: center;
    min-width: 150px;  /* Added minimum width */
	border: 1px solid rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.verb-box:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
}

.verb-box h3 {
    color: #1e88e5; /* Changed to bright blue */
    margin-bottom: 0.5rem;
    font-size: 1.2rem;
    font-weight: bold;
}

.verb-box span {
    display: block;
    font-size: 1.2rem;
    color: #333;
    margin: 0.5rem 0;
    font-weight: 500;
    word-wrap: break-word;
    line-height: 1.4;
}

.verb-box audio {
    width: 100%;
    max-width: 140px;
    margin: 0.5rem auto 0;
}

.word-boxes {
    display: flex;
    justify-content: space-between;
    gap: 0.8rem;  /* Reduced from 1rem */
    padding: 0 0.5rem;  /* Reduced padding */
    margin-top: 0.5rem;  /* Reduced from 1rem */
}

.word-box {
    flex: 1;
    background-color: #f8f9fa;
    padding: 0.8rem;  /* Reduced from 1rem */
    border-radius: 0.5rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.4rem;  /* Reduced from 0.5rem */
    min-width: 120px;
}

.word-box audio {
    width: 150px;
    margin-top: 0.5rem;
}

.chinese-label {
    background-color: #ff9800;
}

#front-word-chinese-meaning {
    color: #4a148c; /* Changed to deep purple */
    font-weight: bold;
    font-size: 1.1rem;
    text-align: center;
}

.sentence-header {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 0.8rem;
}

.sentence-group {
    padding: 1.5rem;
    background-color: #f8f9fa;
    border-radius: 0.5rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    margin-bottom: 1rem;
}

#front-sentence-present,
#front-sentence-past {
    display: block;
    color: #555;
    font-size: 1.1rem;
    line-height: 1.6;
    margin-bottom: 0.8rem;
    flex: 1;
}

.quiz-buttons {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 2rem 0;
    width: 100%;
    z-index: 5;
    position: relative;
}

.quiz-option {
    width: 100%;
    min-height: 60px;
    padding: 1rem;
    font-size: 1.1rem;
    text-align: left;
    background-color: white;
    border: 2px solid #007acc;
    color: #007acc;
    transition: all 0.3s ease;
    white-space: normal;
    word-wrap: break-word;
    cursor: pointer;
    margin-bottom: 1rem;
    z-index: 10;
    position: relative;
	overflow: hidden;
}

.quiz-option:disabled {
    opacity: 0.7;
    cursor: not-allowed;
}

.quiz-option:hover {
    background-color: #007acc;
    color: white;
}

.quiz-option.correct {
    background-color: #2ecc71;
    border-color: #2ecc71;
    color: white;
	animation: correctAnswer 0.6s ease;
}

.quiz-option.incorrect {
    background-color: #e74c3c;
    border-color: #e74c3c;
    color: white;
}

.quiz-option::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.2) 50%,
        rgba(255, 255, 255, 0) 100%
    );
    transition: all 0.6s ease;
    z-index: -1;
}

.quiz-option:hover::before {
    left: 100%;
}

@keyframes correctAnswer {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

.quiz-feedback {
    text-align: center;
    margin-top: 2rem;
    padding: 1rem;
    border-radius: 0.5rem;
}

#quiz-correctness {
    font-size: 1.5rem;
    font-weight: bold;
    margin-bottom: 1rem;
}

#quiz-explanation {
    font-size: 1.2rem;
    color: #555;
    margin-bottom: 1rem;
}

#quiz-audio {
    width: 100%;
    max-width: 300px;
    margin: 0 auto;
}

.feedback-container {
    text-align: center;
    padding: 2rem;
    max-width: 80%;
}

.feedback-title {
    font-size: 2rem;
    margin-bottom: 1.5rem;
    color: #2ecc71;
}

.feedback-title.incorrect {
    color: #e74c3c;
}

.feedback-text {
    font-size: 1.3rem;
    margin-bottom: 2rem;
    color: #555;
}

/* Keep only current layout components */
.revision-layout {
    display: grid;
    grid-template-columns: 0.6fr 0.8fr 1.2fr; /* Three-column layout */
    gap: 1.5rem;
    width: 100%;
    height: 100%;
    padding: 0.5rem;
}

.revision-left {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    max-width: 300px;
    min-width: 250px;
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    justify-content: center; /* Added to center content vertically */
}

.revision-middle {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.revision-right {
    padding: 1rem;
    flex: 1;
    overflow-y: auto;
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.image-section {
    width: 100%;
    height: 250px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: white;
    border-radius: 8px;
    box-shadow: inset 0 0 4px rgba(0,0,0,0.05);
    margin: auto 0; /* Added to create equal space above and below */
}

.verb-boxes {
    display: flex !important;
    flex-direction: column !important;
    gap: 1rem;
    width: 100%;
    height: 100%;
    justify-content: center;
}

.verb-box {
    flex: 1;
    background-color: white;
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    text-align: center;
}

.sentence-box {
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.sentence-item {
    display: block !important;  /* Force display */
    background: linear-gradient(to bottom, #ffffff, #f8faff);
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    margin-bottom: 1rem;
}

.sentence-item h3 {
    color: #007acc;
    margin-bottom: 1rem;
    font-size: 1.1rem;
}

.sentence-item p {
    font-size: 1.2rem;
    line-height: 1.6;
    color: #444;
    margin-bottom: 1rem;
}

.highlight {
    background-color: #fff3cd;
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
}

audio {
    width: 100%;
    max-width: 250px;
    margin: 0.5rem auto 0;
}

/* Verb type selection styles */
#verb-types {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    padding: 2rem;
}

.verb-type-buttons {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    width: 100%;
    max-width: 400px;
}

#btn-verb-back {
    background: #ddf5ff;
    color: #007acc;
    margin-top: 1rem;
}

#btn-verb-back:hover {
    background: #c1eaff;
}

/* Update revision button styles */
#btn-revision {
    background: #6594ca;
    font-size: 1.3rem;
    margin-bottom: 1rem;
}

/* Quiz Layout - Keep current quiz features */
.quiz-layout {
    position: relative;
    z-index: 1;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    width: 100%;
    height: 100%;
    padding: 1rem;
}

.quiz-left {
    display: flex;
    justify-content: center;
    align-items: center;
}

.quiz-image-section {
    width: 100%;
    height: 300px;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Add this to prevent image overflow */
}

.quiz-image-section img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    max-height: 300px; /* Match parent height */
    transition: all 0.5s ease; /* Changed from filter to all */
}

.blur-image {
    filter: blur(8px) !important; /* Added !important to ensure it overrides other filters */
}

.grayscale-image {
    filter: grayscale(100%) !important;
}

.colorful-image {
    filter: saturate(130%) brightness(105%) !important;
}

.quiz-right {
    position: relative;
    z-index: 2; /* Ensure buttons are clickable */
    display: flex;
    flex-direction: column;
    gap: 2rem;
    justify-content: center;
}

.quiz-options {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.quiz-sentence-option {
    position: relative;
    z-index: 3; /* Higher z-index for buttons */
    padding: 1.5rem;
    font-size: 1.2rem;
    text-align: left;
    background: white;
    border: 2px solid #007acc;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
	position: relative;
    overflow: hidden;
    z-index: 1;
    pointer-events: auto; /* Explicitly enable pointer events */
}

.quiz-sentence-option:hover {
    background: #f0f9ff;
    transform: translateY(-2px);
}

.quiz-sentence-option.correct {
    background: #2ecc71;
    color: white;
    border-color: #2ecc71;
	animation: correctAnswer 0.6s ease;
}

.quiz-sentence-option.incorrect {
    background: #e74c3c;
    color: white;
    border-color: #e74c3c;
}

.quiz-sentence-option::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.2) 50%,
        rgba(255, 255, 255, 0) 100%
    );
    transition: all 0.6s ease;
    z-index: -1;
}

.quiz-sentence-option:hover::before {
    left: 100%;
}

.quiz-feedback {
    text-align: center;
    padding: 1rem;
    border-radius: 8px;
    background: #f8f9fa;
}

#quiz-result {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: #2ecc71;
}

#quiz-result.incorrect {
    color: #e74c3c;
}

.grayscale {
    filter: grayscale(100%);
}

#btn-verb-back, #btn-quiz-back {
    background: #f8f9fa;
    color: #007acc;
    border: 2px solid #007acc;
    margin-top: 2rem;
    font-weight: bold;
    transition: all 0.3s ease;
}

#btn-verb-back:hover, #btn-quiz-back:hover {
    background: #007acc;
    color: white;
    transform: translateX(-5px);
}

#btn-back {
    background-color: #f8f9fa;
    color: #007acc;
    border: 2px solid #007acc;
    font-weight: bold;
    transition: all 0.3s ease;
}

#btn-back:hover {
    background-color: #007acc;
    color: white;
    transform: translateX(-5px);
}

/* Quiz Level 2 Styles */
.fill-in-blank-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding: 1rem;
}

#quiz-sentence-blank {
    font-size: 1.3rem;
    line-height: 1.6;
    color: #333;
    margin-bottom: 1rem;
}

.answer-input-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: flex-end;
}

#answer-input {
    width: 100%;
    padding: 1rem;
    font-size: 1.2rem;
    border: 2px solid #007acc;
    border-radius: 8px;
    outline: none;
    transition: border-color 0.3s ease;
}

#answer-input:focus {
    border-color: #005c99;
    box-shadow: 0 0 0 2px rgba(0, 122, 204, 0.2);
}

#btn-submit-answer {
    position: relative;
    z-index: 3;
    pointer-events: auto;
    padding: 0.8rem 2rem;
    background-color: #007acc;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

#btn-submit-answer:hover {
    background-color: #005c99;
    transform: translateY(-2px);
}

.quiz-feedback-level2 {
    margin-top: 2rem;
    padding: 1rem;
    border-radius: 8px;
    background: #f8f9fa;
    text-align: center;
}

#quiz-result-level2 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: #2ecc71;
}

#quiz-result-level2.incorrect {
    color: #e74c3c;
}

#quiz-correct-sentence {
    font-size: 1.2rem;
    color: #333;
    margin: 1rem 0;
    line-height: 1.6;
}

.quiz-instructions {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 8px;
    margin: 1rem 0;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.quiz-instructions h4 {
    color: #007acc;
    margin-bottom: 0.8rem;
}

.quiz-instructions ul {
    list-style-type: none;
    padding: 0;
}

.quiz-instructions li {
    color: #555;
    margin: 0.5rem 0;
    padding-left: 1.5rem;
    position: relative;
}

.quiz-instructions li:before {
    content: '•';
    position: absolute;
    left: 0;
    color: #007acc;
}

.score-container {
    background: #007acc;
    color: white;
    padding: 1rem 2rem;
    border-radius: 8px;
    margin: 1rem 0;
    text-align: center;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.score-container h3 {
    font-size: 1.3rem;
    margin: 0;
}

#quiz-score {
    font-weight: bold;
    font-size: 1.5rem;
    color: #ffeb3b;
}

.quiz-score-display {
    position: absolute;
    top: 1rem;
    left: 1rem; /* Changed from right to left */
    background: rgba(0, 122, 204, 0.9); /* Made slightly transparent */
    color: white;
    padding: 0.5rem 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    z-index: 10;
    pointer-events: none;
    backdrop-filter: blur(5px); /* Add blur effect to background */
    transition: all 0.3s ease;
}

.quiz-score-display h3 {
    font-size: 1rem; /* Made slightly smaller */
    margin: 0;
    opacity: 0.9;
}

#quiz-score-current {
    font-weight: bold;
    color: #ffeb3b;
}

.hint-container {
    margin: 1rem 0;
    text-align: center;
}

.hint-button {
    position: relative;
    z-index: 3;
    pointer-events: auto;
    background: #ffd700;
    color: #333;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.hint-button:hover {
    background: #ffc800;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.hint-text {
    margin-top: 1rem;
    padding: 1rem;
    background: #fff3cd;
    border-radius: 8px;
    color: #856404;
    font-size: 1.1rem;
    line-height: 1.6;
    animation: fadeIn 0.3s ease;
}

.hint-text p {
    margin: 0.5rem 0;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Score History Styles */
.score-history {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 8px;
    margin: 1rem 0;
    width: 100%;
    max-width: 280px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.score-history h3 {
    color: #007acc;
    margin-bottom: 0.8rem;
    font-size: 1.1rem;
    text-align: center;
}

#score-list {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.score-item {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem;
    background: white;
    border-radius: 4px;
    font-size: 0.9rem;
}

.score-item .date {
    color: #666;
}

.score-item .points {
    font-weight: bold;
    color: #007acc;
}

/* Quiz Timer Styles */
.quiz-header {
    position: absolute;
    top: 1rem;
    right: 1rem;
    z-index: 10;
}

.quiz-timer {
    display: none;  /* Hide by default */
    background: #007acc;
    color: white;
    padding: 0.5rem 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

/* Show timer when flashcard is visible and quiz mode is active */
#flashcard:not([hidden]) ~ #actions .quiz-timer {
    display: flex;
}

.quiz-timer.timer-warning {
    background: #ff0000;  /* Bright red */
    animation: warningPulse 1s infinite;
}

@keyframes warningPulse {
    0%, 100% { 
        background: #ff0000;
        transform: scale(1);
    }
    50% { 
        background: #cc0000;
        transform: scale(1.05);
    }
}

/* Quiz Level 2 Styles */
.fill-in-blank-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding: 1rem;
}

#quiz-sentence-blank {
    font-size: 1.3rem;
    line-height: 1.6;
    color: #333;
    margin-bottom: 1rem;
}

.answer-input-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: flex-end;
}

#answer-input {
    width: 100%;
    padding: 1rem;
    font-size: 1.2rem;
    border: 2px solid #007acc;
    border-radius: 8px;
    outline: none;
    transition: border-color 0.3s ease;
}

#answer-input:focus {
    border-color: #005c99;
    box-shadow: 0 0 0 2px rgba(0, 122, 204, 0.2);
}

#btn-submit-answer {
    position: relative;
    z-index: 3;
    pointer-events: auto;
    padding: 0.8rem 2rem;
    background-color: #007acc;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

#btn-submit-answer:hover {
    background-color: #005c99;
    transform: translateY(-2px);
}

.quiz-feedback-level2 {
    margin-top: 2rem;
    padding: 1rem;
    border-radius: 8px;
    background: #f8f9fa;
    text-align: center;
}

#quiz-result-level2 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: #2ecc71;
}

#quiz-result-level2.incorrect {
    color: #e74c3c;
}

#quiz-correct-sentence {
    font-size: 1.2rem;
    color: #333;
    margin: 1rem 0;
    line-height: 1.6;
}

.quiz-instructions {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 8px;
    margin: 1rem 0;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.quiz-instructions h4 {
    color: #007acc;
    margin-bottom: 0.8rem;
}

.quiz-instructions ul {
    list-style-type: none;
    padding: 0;
}

.quiz-instructions li {
    color: #555;
    margin: 0.5rem 0;
    padding-left: 1.5rem;
    position: relative;
}

.quiz-instructions li:before {
    content: '•';
    position: absolute;
    left: 0;
    color: #007acc;
}

.score-container {
    background: #007acc;
    color: white;
    padding: 1rem 2rem;
    border-radius: 8px;
    margin: 1rem 0;
    text-align: center;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.score-container h3 {
    font-size: 1.3rem;
    margin: 0;
}

#quiz-score {
    font-weight: bold;
    font-size: 1.5rem;
    color: #ffeb3b;
}

.quiz-score-display {
    position: absolute;
    top: 1rem;
    left: 1rem; /* Changed from right to left */
    background: rgba(0, 122, 204, 0.9); /* Made slightly transparent */
    color: white;
    padding: 0.5rem 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    z-index: 10;
    pointer-events: none;
    backdrop-filter: blur(5px); /* Add blur effect to background */
    transition: all 0.3s ease;
}

.quiz-score-display h3 {
    font-size: 1rem; /* Made slightly smaller */
    margin: 0;
    opacity: 0.9;
}

#quiz-score-current {
    font-weight: bold;
    color: #ffeb3b;
}

.hint-container {
    margin: 1rem 0;
    text-align: center;
}

.hint-button {
    position: relative;
    z-index: 3;
    pointer-events: auto;
    background: #ffd700;
    color: #333;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.hint-button:hover {
    background: #ffc800;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.hint-text {
    margin-top: 1rem;
    padding: 1rem;
    background: #fff3cd;
    border-radius: 8px;
    color: #856404;
    font-size: 1.1rem;
    line-height: 1.6;
    animation: fadeIn 0.3s ease;
}

.hint-text p {
    margin: 0.5rem 0;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Score History Styles */
.score-history {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 8px;
    margin: 1rem 0;
    width: 100%;
    max-width: 280px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.score-history h3 {
    color: #007acc;
    margin-bottom: 0.8rem;
    font-size: 1.1rem;
    text-align: center;
}

#score-list {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.score-item {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem;
    background: white;
    border-radius: 4px;
    font-size: 0.9rem;
}

.score-item .date {
    color: #666;
}

.score-item .points {
    font-weight: bold;
    color: #007acc;
}

/* Quiz Timer Styles */
.quiz-header {
    position: absolute;
    top: 1rem;
    right: 1rem;
    z-index: 10;
}

.quiz-timer {
    display: none;  /* Hide by default */
    background: #007acc;
    color: white;
    padding: 0.5rem 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

/* Only show timer for quiz mode */
#flashcard:not([hidden]) ~ #actions .quiz-timer.quiz-mode {
    display: flex;
}

.quiz-timer.timer-warning {
    background: #ff0000;  /* Bright red */
    animation: warningPulse 1s infinite;
}

@keyframes warningPulse {
    0%, 100% { 
        background: #ff0000;
        transform: scale(1);
    }
    50% { 
        background: #cc0000;
        transform: scale(1.05);
    }
}

/* Congratulations page - keep current implementation */
.congratulations {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #6594ca, #007acc);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
}

.congrats-content {
    text-align: center;
    background: white;
    padding: 3rem;
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.2);
    animation: popIn 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.congrats-content h2 {
    font-size: 3rem;
    color: #007acc;
    margin-bottom: 1rem;
    animation: bounce 1s infinite;
}

.congrats-content h3 {
    font-size: 2rem;
    color: #2ecc71;
    margin-bottom: 2rem;
    animation: glow 2s ease-in-out infinite;
}

.final-score {
    font-size: 1.5rem;
    color: #333;
    margin-bottom: 2rem;
    padding: 1rem;
    background: #f8f9fa;
    border-radius: 10px;
}

#final-score {
    font-size: 2rem;
    font-weight: bold;
    color: #e74c3c;
}

.confetti {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

@keyframes popIn {
    0% { transform: scale(0); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
}

@keyframes confetti-fall {
    0% { transform: translateY(-100vh) rotate(0deg); }
    100% { transform: translateY(100vh) rotate(360deg); }
}

#btn-return-home {
    background: #87CEEB; /* Light blue background */
    color: white;
    font-size: 1.3rem;
    padding: 1rem 2rem;
    margin-top: 1.5rem;
    border: none;
    transition: all 0.3s ease;
}

#btn-return-home:hover {
    background: #5FB8E5;
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

/* Map view - update scrolling behavior */
#map-view {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: linear-gradient(135deg, #f4f8fb 0%, #e8f4ff 100%);
    z-index: 1000;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
    overflow-y: auto; /* Add scroll */
}

#map-view #header {
    margin-top: 0;
}

.world-map-image {
    width: 90%;
    height: auto;
    max-height: 70vh;
    object-fit: contain;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    filter: grayscale(100%);
    transition: filter 0.6s ease;
}

#btn-map-back {
    position: fixed;
    bottom: 2rem;
    left: 2rem;
    padding: 1rem 2rem;
    z-index: 1001;
    background: #f8f9fa;
    color: #007acc;
    border: 2px solid #007acc;
    font-weight: bold;
    transition: all 0.3s ease;
    margin-top: 2rem; /* Add margin to avoid overlap */
}

#btn-map-back:hover {
    background: #007acc;
    color: white;
    transform: translateX(-5px);
}

#btn-show-map {
    background: linear-gradient(135deg, #4CAF50, #45a049);
}

#btn-show-map:hover {
    background: linear-gradient(135deg, #45a049, #3d8b40);
}

/* Map Grid Styles */
.map-grid-container {
    position: relative;
    width: 100%;
    height: auto;
    margin: 2rem auto;
    max-width: 1200px; /* Limit maximum width */
    aspect-ratio: 1.77/1; /* 16:9 aspect ratio */
    overflow: hidden;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    transition: all 0.5s ease;
}

.world-map-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: none; /* Remove default grayscale */
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.map-grid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(5, 1fr);
    gap: 2px;
    padding: 4px;
    background: transparent; /* Changed from semi-transparent black */
}

.grid-cell {
    position: relative;
    border: 1px solid rgba(255, 255, 255, 0.3);
    background: rgba(0, 0, 0, 0.7); /* Dark overlay */
    transition: all 0.5s ease;
    cursor: pointer;
    backdrop-filter: grayscale(100%) brightness(0.7);
    -webkit-backdrop-filter: grayscale(100%) brightness(0.7);
    opacity: 1;
    visibility: visible;
}

.grid-cell:hover {
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: grayscale(50%) brightness(0.9);
    -webkit-backdrop-filter: grayscale(50%) brightness(0.9);
}

.grid-cell.completed {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transition: all 0.5s ease;
}

@keyframes revealCell {
    0% {
        opacity: 1;
        visibility: visible;
    }
    100% {
        opacity: 0;
        visibility: hidden;
    }
}

/* Remove previous completed styles */
.grid-cell.completed ~ .world-map-image,
.world-map-image.has-completed-missions {
    filter: none;
}

/* Mission Progress Styles */
.mission-progress {
    width: 100%;
    max-width: 1200px; /* Match map container */
    margin: 1rem auto;
}

.grid-cell {
    position: relative;
    border: 1px solid rgba(0, 0, 0, 0.3);
    background: rgba(255, 255, 255, 0.05);
    transition: all 0.3s ease;
    cursor: pointer;
    z-index: 10;
    /* Add mask for individual cell */
    -webkit-mask-size: cover;
    mask-size: cover;
}

.grid-cell:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(0, 0, 0, 0.5);
    box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.2);
}

.grid-cell.completed {
    /* Remove grayscale only for completed cells */
    -webkit-backdrop-filter: grayscale(0%);
    backdrop-filter: grayscale(0%);
    background: transparent;
    border-color: rgba(0, 0, 0, 0.1);
}

/* Remove the previous completed grid styles that affected the whole map */
.grid-cell.completed ~ .world-map-image,
.world-map-image.has-completed-missions {
    filter: none;
}

/* Add individual cell colorization */
.grid-cell:before {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.5);
    transition: opacity 0.3s ease;
}

.grid-cell.completed:before {
    opacity: 0;
    background: transparent;
}

/* Grid Cell and Mission Styles */
.grid-cell {
    position: relative;
    border: 1px solid rgba(0, 0, 0, 0.3);
    background: rgba(255, 255, 255, 0.05);
    transition: all 0.3s ease;
    cursor: pointer;
    z-index: 10;
}

.grid-cell:hover {
    background: rgba(255, 255, 255, 0.2);
    box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.2);
    transform: scale(1.05);
}

.grid-cell.completed {
    background: transparent;
    border-color: rgba(0, 0, 0, 0.1);
}

.grid-cell.completed::before {
    opacity: 0;
}

/* Add this new style to modify map sections when missions are completed */
.grid-cell.completed ~ .world-map-image,
.world-map-image.has-completed-missions {
    filter: grayscale(0%);
}

.grid-cell.completed {
    background: linear-gradient(45deg, #ffeb3b, #4CAF50, #2196F3);
    background-size: 200% 200%;
    animation: gradientBG 3s ease infinite;
}

.mission-popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
    z-index: 1002;
    max-width: 80%;
    max-height: 80vh; /* Add max height */
    overflow-y: auto; /* Make scrollable */
    text-align: center;
}

.mission-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1001;
}

.mission-popup.mission-complete {
    background: linear-gradient(135deg, #fff, #f0f9ff);
    border: 2px solid #007acc;
    animation: popIn 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes gradientBG {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* Mission Progress Styles */
.mission-progress {
    background: white;
    padding: 1.5rem;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    margin: 1rem 0;
    text-align: center;
    width: 90%;
    max-width: 500px;
}

.progress-bar {
    background: #eee;
    height: 20px;
    border-radius: 10px;
    margin: 1rem 0;
    overflow: hidden;
}

.progress-fill {
    height: 100%;
    background: linear-gradient(90deg, #4CAF50, #2196F3);
    width: 0%;
    transition: width 0.5s ease;
}

.progress-text {
    color: #007acc;
    font-weight: bold;
    font-size: 1.1rem;
}

.grid-cell::before {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.5);
    transition: opacity 0.3s ease;
}

.grid-cell.completed::before {
    opacity: 0;
}

.grid-cell.completed {
    background: linear-gradient(45deg, #ffeb3b, #4CAF50, #2196F3);
    background-size: 200% 200%;
    animation: gradientBG 3s ease infinite;
    border-color: #4CAF50;
}

.mission-status {
    position: absolute;
    bottom: 5px;
    right: 5px;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: #666;
    transition: all 0.3s ease;
}

.grid-cell.completed .mission-status {
    background: #4CAF50;
    transform: scale(1.2);
}

/* Mission complete popup animation */
@keyframes missionComplete {
    0% { transform: scale(0.8); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
}

.mission-complete-popup {
    animation: missionComplete 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}
.mission-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-top: 1.5rem;
}

.mission-buttons button {
    background: #007acc; /* Blue background */
    color: white;
    padding: 0.8rem 2rem;
    border: none;
    transition: all 0.3s ease;
}

.mission-buttons button:hover {
    background: #005c99; /* Darker blue on hover */
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* Completed mission text style */
.mission-completed-text {
    color: #2ecc71;
    font-weight: bold;
    margin: 1rem 0;
}

/* Mission complete popup styles */
.mission-popup #return-map-btn {
    background: #007acc;
    color: white;
    padding: 1rem 2rem;
    border: none;
    font-size: 1.2rem;
    margin-top: 1.5rem;
    transition: all 0.3s ease;
}

.mission-popup #return-map-btn:hover {
    background: #005c99;
    transform: translateY(-3px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

/* Enhanced Start Page Styles */
.particles-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;
}

.floating-elements {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.floating-icon {
    position: absolute;
    font-size: 2rem;
    animation: float 6s ease-in-out infinite;
}

.floating-icon:nth-child(1) { 
    top: 5%; 
    left: 5%; 
    animation-delay: 0s; 
}
.floating-icon:nth-child(2) { 
    top: 8%; 
    right: 5%; 
    animation-delay: 1s; 
}
.floating-icon:nth-child(3) { 
    top: 15%; 
    left: 85%; 
    animation-delay: 2s; 
}
.floating-icon:nth-child(4) { 
    top: 12%; 
    left: 15%; 
    animation-delay: 3s; 
}
.floating-icon:nth-child(5) { 
    top: 7%; 
    left: 45%; 
    animation-delay: 4s; 
}

.welcome-container {
    text-align: center;
    margin-bottom: 2rem;
    position: relative;
    z-index: 1;
}

.typing-text {
    font-size: 1.2rem;
    color: #666;
    margin-top: 1rem;
    position: relative;
    display: inline-block;
}

.typing-text::after {
    content: '|';
    animation: blink 1s infinite;
}

.features-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    margin: 2rem 0;
    padding: 0 1rem;
}

.feature-card {
    background: white;
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    text-align: center;
    transition: all 0.3s ease;
}

.feature-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

.feature-icon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    display: block;
}

.main-buttons {
    display: flex;
    flex-direction: row;  /* Changed from column to row */
    gap: 2rem;  /* Increased gap for better spacing */
    justify-content: center;
    margin: 2rem 0;
    width: 100%;
}

.button-revision-type {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    position: relative;
    overflow: hidden;
}

.button-icon {
    font-size: 1.5rem;
}

.score-header {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 1rem;
}

.score-badge {
    background: #ff9800;
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.9rem;
    font-weight: bold;
}

@keyframes float {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(5deg); }
}

@keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
}

/* Add shimmer effect to buttons */
.button-revision-type::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        45deg,
        transparent,
        rgba(255,255,255,0.1),
        transparent
    );
    transform: rotate(45deg);
    animation: shimmer 3s infinite;
}

@keyframes shimmer {
    0% { transform: translateX(-100%) rotate(45deg); }
    100% { transform: translateX(100%) rotate(45deg); }
}
